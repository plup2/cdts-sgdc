name: DEPLOY

on:
  release:
    types: [published]

env:
  nodeversion: 14.x

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cdnEnv: [esdcprod, canada]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ env.nodeversion }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.nodeversion }}
        cache: npm

    - name: Install dependencies
      run: npm ci

    - name: Build with samples cdnEnv=${{ matrix.cdnEnv }}
      run: npm run build-prod -- --cdts_samples_cdnenv=${{ matrix.cdnEnv }}
      env:
        DISABLE_PROXY: true

    - name: Save build files to cache cache-release-${{ github.event.release.tag_name }}-${{ matrix.cdnEnv }}
      id: cache-release-dist
      uses: actions/cache@v2
      with:
        path: ./dist
        key: cache-release-${{ github.event.release.tag_name }}-${{ matrix.cdnEnv }}

  deploy-esdcprod:
    runs-on: ubuntu-latest
    needs: build
    environment: testenv

    env:
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

    steps:
    - name: Use build cache cache-release-${{ github.event.release.tag_name }}-esdcprod
      uses: actions/cache@v2
      with:
        path: ./dist
        key: cache-release-${{ github.event.release.tag_name }}-esdcprod

    # az connection string in environment variable AZURE_STORAGE_CONNECTION_STRING
    # https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-static-site-github-actions
    # https://docs.microsoft.com/en-us/cli/azure/storage/blob?view=azure-cli-latest#az_storage_blob_upload_batch
    - name: Upload to Azure storage account
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.81
        inlineScript: |
            az storage blob upload-batch --destination testweb --source ./dist/app/cls/WET/gcweb/v4_0_44/cdts

  deploy-canada:
    runs-on: ubuntu-latest
    needs: build
    environment: testcanada

    steps:
    - name: Use build cache cache-release-${{ github.event.release.tag_name }}-canada
      uses: actions/cache@v2
      with:
        path: ./dist
        key: cache-release-${{ github.event.release.tag_name }}-canada

    - name: Clone deployment repository
      uses: actions/checkout@v2
      with:
        repository: plup2/cdts-release-test
        path: ./tmp/canada-deploy-repo
        ref: main
        token: ${{ secrets.REPO_ACCESS_PAT }}

    - name: Copy release files
      run: |
        mkdir -p ./tmp/canada-deploy-repo/jcr_root/etc/design/canada/cdts/gcweb
        cp -rv ./dist/app/cls/WET/gcweb/* ./tmp/canada-deploy-repo/jcr_root/etc/design/canada/cdts/gcweb

    - name: Create and push deployment branch
      run: |
        cd ./tmp/canada-deploy-repo
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout -b cdts-${{ github.event.release.tag_name }}
        git add .
        git commit -m "Deployment files for CDTS release ${{ github.event.release.tag_name }}"
        git push origin cdts-${{ github.event.release.tag_name }}

    # https://github.com/actions/github-script
    # https://octokit.github.io/rest.js/v18#pulls
    - name: Creating Pull Request
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.REPO_ACCESS_PAT }}
        script: |
          github.pulls.create({
            owner: 'ahmad-shahid',
            repo: 'cdts-release-test',
            head: 'plup2:cdts-${{ github.event.release.tag_name }}',
            base: 'main',
            title: 'Deployment files for CDTS release ${{ github.event.release.tag_name }}',
          });

# https://github.community/t/how-to-get-just-the-tag-name/16241/10
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows

